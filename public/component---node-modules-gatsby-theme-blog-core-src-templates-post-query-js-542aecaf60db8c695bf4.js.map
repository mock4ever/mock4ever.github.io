{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./src/gatsby-theme-blog/components/post-title.js","webpack:///./src/gatsby-theme-blog/components/post-date.js","webpack:///./src/gatsby-theme-blog/components/post-footer.js","webpack:///./src/gatsby-theme-blog/components/post.js","webpack:///./node_modules/gatsby-theme-blog-core/src/templates/post-query.js","webpack:///./node_modules/gatsby-theme-blog/src/gatsby-theme-blog-core/components/post.js"],"names":["MDXRenderer","require","module","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","length","$args","push","apply","proto","prototype","instance","Object","result","Function","call","React","useMDXComponents","mdx","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","values","key","fn","PostTitle","h1","PostDate","p","sx","fontSize","mt","mb","Footer","previous","next","css","pt","hr","as","flexWrap","justifyContent","listStyle","padding","a","Link","to","slug","rel","title","Post","data","post","site","siteMetadata","location","description","excerpt","keywords","date","body","PostPage","blogPost","query"],"mappings":"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","file":"component---node-modules-gatsby-theme-blog-core-src-templates-post-query-js-542aecaf60db8c695bf4.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","import React from \"react\"\r\nimport { Styled } from \"theme-ui\"\r\n\r\nconst PostTitle = props => <Styled.h1 {...props} />\r\n\r\nexport default PostTitle\r\n","/** @jsx jsx */\r\nimport { Styled, jsx } from \"theme-ui\"\r\n\r\nconst PostDate = props => (\r\n  <Styled.p\r\n    sx={{\r\n      fontSize: 1,\r\n      mt: -3,\r\n      mb: 3,\r\n    }}\r\n    {...props}\r\n  />\r\n)\r\n\r\nexport default PostDate\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport { css, Styled, Flex } from \"theme-ui\"\r\n\r\nimport Bio from \"../components/bio\"\r\n\r\nconst Footer = ({ previous, next }) => (\r\n  <footer\r\n    css={css({\r\n      mt: 4,\r\n      pt: 3,\r\n    })}\r\n  >\r\n    <Styled.hr />\r\n    <Bio />\r\n    {(previous || next) && (\r\n      <Flex\r\n        as=\"ul\"\r\n        css={css({\r\n          flexWrap: `wrap`,\r\n          justifyContent: `space-between`,\r\n          listStyle: `none`,\r\n          padding: 0,\r\n        })}\r\n      >\r\n        <li>\r\n          {previous && (\r\n            <Styled.a as={Link} to={previous.slug} rel=\"prev\">\r\n              ← {previous.title}\r\n            </Styled.a>\r\n          )}\r\n        </li>\r\n        <li>\r\n          {next && (\r\n            <Styled.a as={Link} to={next.slug} rel=\"next\">\r\n              {next.title} →\r\n            </Styled.a>\r\n          )}\r\n        </li>\r\n      </Flex>\r\n    )}\r\n  </footer>\r\n)\r\n\r\nexport default Footer\r\n","import React from \"react\"\r\n\r\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\r\n\r\nimport Layout from \"./layout\"\r\nimport SEO from \"./seo\"\r\nimport PostTitle from \"./post-title\"\r\nimport PostDate from \"./post-date\"\r\nimport PostFooter from \"./post-footer\"\r\n\r\nconst Post = ({\r\n  data: {\r\n    post,\r\n    site: {\r\n      siteMetadata: { title },\r\n    },\r\n  },\r\n  location,\r\n  previous,\r\n  next,\r\n}) => (\r\n  <Layout location={location} title={title}>\r\n    <SEO\r\n      title={post.title}\r\n      description={post.excerpt}\r\n      keywords={post.keywords}\r\n    />\r\n    <main>\r\n      <PostTitle>{post.title}</PostTitle>\r\n      <PostDate>{post.date}</PostDate>\r\n      <MDXRenderer>{post.body}</MDXRenderer>\r\n    </main>\r\n    <PostFooter {...{ previous, next }} />\r\n  </Layout>\r\n)\r\n\r\nexport default Post\r\n","import { graphql } from \"gatsby\"\nimport PostPage from \"../components/post\"\n\nexport default PostPage\n\nexport const query = graphql`\n  query PostPageQuery($id: String!, $previousId: String, $nextId: String) {\n    site {\n      siteMetadata {\n        title\n        social {\n          name\n          url\n        }\n      }\n    }\n    blogPost(id: { eq: $id }) {\n      id\n      excerpt\n      body\n      slug\n      title\n      tags\n      keywords\n      date(formatString: \"MMMM DD, YYYY\")\n    }\n    previous: blogPost(id: { eq: $previousId }) {\n      id\n      excerpt\n      slug\n      title\n      date(formatString: \"MMMM DD, YYYY\")\n    }\n    next: blogPost(id: { eq: $nextId }) {\n      id\n      excerpt\n      slug\n      title\n      date(formatString: \"MMMM DD, YYYY\")\n    }\n  }\n`\n","import React from \"react\"\nimport Post from \"../../components/post\"\n\nexport default ({ location, data }) => {\n  const { blogPost, previous, next } = data\n\n  return (\n    <Post\n      data={{ ...data, post: blogPost }}\n      location={location}\n      previous={previous}\n      next={next}\n    />\n  )\n}\n"],"sourceRoot":""}